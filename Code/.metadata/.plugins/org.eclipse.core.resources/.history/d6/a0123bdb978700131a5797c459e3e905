package app;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import neuralNetwork.BackpropagationTrainer;
import neuralNetwork.NeuralNetwork;
import imageProcessing.FeatureExtractionIOTranslator;
import imageProcessing.INetworkIOTranslator;
import io.CharacterType;

public class MultiNetworkReader {
	public static String getTextFromImage(BufferedImage img, CharacterType[] types) throws IOException{
		String[] results = new String[types.length];
		
		INetworkIOTranslator translator = new FeatureExtractionIOTranslator();
		NeuralNetwork network = new NeuralNetwork(((FeatureExtractionIOTranslator)translator).getInputLength(), 1, 160, 7, true);
		
		for (int i = 0; i < types.length; i++){
			NeuralNetwork trainedNetwork = NetworkFactory.getTrainedNetwork(network, translator, types[i], new BackpropagationTrainer(0.05f, 0.02f));
			ImageReader reader = new ImageReader(trainedNetwork, translator);
			results[i] = reader.readTextFromImage(img);
		}
		
		return getMultiNetworkString(results);
	}
	
	public static String getMultiNetworkString(String[] results){
		StringBuilder builder = new StringBuilder();
		
		for (int i = 0; i < results.length; i++){
			System.out.println("length: " + results[i].length());
		}
		
		return "";
	}
}

package imageProcessing;

import java.util.List;

import featureExtraction.FeatureExtractionHelper;

public class NoiseRemover {
	public static void removeNoise(int[][] imageValues){
		int[][] noiseRemovedValues = imageValues;
		
		for (int row = 0; row < noiseRemovedValues.length; row++){
			for (int col = 0; col < noiseRemovedValues[0].length; col++){
				List<Integer> surroundingValues = FeatureExtractionHelper.getSurroundingValuesFromPoints(noiseRemovedValues, row, col);
				int numSurroundingBlackValues = 0;
				
				for (Integer nextValue : surroundingValues){
					if (nextValue > 0){
						numSurroundingBlackValues++;
					}
				}
				
				if (numSurroundingBlackValues == 0){
					noiseRemovedValues[row][col] = 0;
				}
				else if (numSurroundingBlackValues == 1){
					
				}
			}
		}
	}
	
	private static boolean isOnEdge(int[][] imageValues, int row, int col){
		int height = imageValues.length;
		int width = imageValues[0].length;
		
		return (row == 0 || col == 0 || col == width - 1 || row == height - 1);
	}
}

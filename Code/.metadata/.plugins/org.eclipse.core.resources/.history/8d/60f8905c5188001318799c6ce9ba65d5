package neuralNetwork;

public class MatrixNeuralNetwork {
	private int[] inputNeurons, outputNeurons;
	private int[][] hiddenNeurons;
	
	private int[][] inputWeights, outputWeights;
	private int[][][] hiddenWeights;
	
	private final float MAX_RANDOM_WEIGHT = 0.05f;
	
	public MatrixNeuralNetwork(int numberInputs, int numberHiddenLayers, int numberHiddenNeurons,
			int numberOutputs, boolean useRandomWeights){
		inputNeurons = new int[numberInputs];
		outputNeurons = new int[numberOutputs];
		hiddenNeurons = new int[numberHiddenLayers][numberHiddenNeurons];
		
		inputWeights = new int[numberInputs][numberHiddenNeurons];
		outputWeights = new int[numberHiddenNeurons][numberOutputs];
		hiddenWeights = new int[numberHiddenLayers - 1][numberHiddenNeurons][numberHiddenNeurons];
		
		if (useRandomWeights){
			initializeRandomWeights();
		}
	}
	
	private void initializeRandomWeights();
}

package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import app.AlphaNumericCharacterConverter;

public class SaveImageWindow extends JFrame{
	private JLabel selectedFolderLabel;
	private JButton chooseFolderButton, saveButton;
	private JTextField characterTextField;
	
	private File selectedFolder;
	private DrawingPanel panel;
	
	public SaveImageWindow(DrawingPanel panel){
		this.panel = panel;
		setupWindow();
	}

	private void setupWindow() {
		JPanel setFolderPanel = new JPanel();
		selectedFolderLabel = new JLabel("Selected Training Set: ---");
		chooseFolderButton = new JButton("Choose Folder...");
	}
	
	private class ButtonListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent evt) {
			if (evt.getSource() == chooseFolderButton){
				JFileChooser chooser = new JFileChooser();
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				
				int result = chooser.showOpenDialog(SaveImageWindow.this);
				
				if (result == JFileChooser.APPROVE_OPTION){
					selectedFolder = chooser.getSelectedFile();
					selectedFolderLabel.setText("Selected Training Set: " + selectedFolder.getName());
				}
			}
			else if (evt.getSource() == saveButton){
				String selectedChar = characterTextField.getText();
				
				if (selectedChar.length() == 1 && isValidCharacter(selectedChar.charAt(0))){
					char character = selectedChar.charAt(0);
					String filename = TrainingDataNameAssigner.assignName(selectedFolder, character);
					
				}
				else JOptionPane.showMessageDialog(SaveImageWindow.this, 
						"Must enter a valid character (A-Z, a-z, or 0-9 only).", "Invalid Input", JOptionPane.ERROR_MESSAGE);
			}
		}

		private boolean isValidCharacter(char character) {
			int charValue = (int)character;
			return ((charValue >= AlphaNumericCharacterConverter.UPPER_START && charValue <= AlphaNumericCharacterConverter.UPPER_END) ||
					(charValue >= AlphaNumericCharacterConverter.LOWER_START && charValue <= AlphaNumericCharacterConverter.LOWER_END) ||
					(charValue >= AlphaNumericCharacterConverter.NUMERIC_START && charValue <= AlphaNumericCharacterConverter.NUMERIC_END));
		}
	}
}

package imageProcessing;

import java.awt.image.BufferedImage;

public class NetworkIOTranslator {
	private final int IMAGE_DIMENSION = 30;
	
	public int[] translateCharacterToBraille(char c){
		return null;
	}
	
	public char translateBrailleToCharacter(int[] braille){
		return 'a';
	}
	
	public float[] translateImageToNetworkInput(BufferedImage img){
		float[] networkInput = new float[IMAGE_DIMENSION * IMAGE_DIMENSION];
		
		int[] sourceData = new int[img.getWidth() * img.getHeight()];
		
		float scaleValueX = IMAGE_DIMENSION / img.getWidth();
		float scaleValueY = IMAGE_DIMENSION / img.getHeight();
		
		int currentInputIndex = 0;
		
		for (float x = scaleValueX; x < img.getWidth() && 
				currentInputIndex < networkInput.length; x += scaleValueX){
			for (float y = scaleValueY; y < img.getHeight() && 
					currentInputIndex < networkInput.length; y += scaleValueY){
				int xPos = (int) x;
				int yPos = (int) x;
				
				networkInput[currentInputIndex] = img.getRGB(xPos, yPos);
				currentInputIndex++;
			}
		}
	}
}

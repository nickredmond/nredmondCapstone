package appTest;

import imageProcessing.ImagePreprocessor;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Set;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import neuralNetwork.NeuralNetwork;
import neuralNetwork.TrainingExample;

public class MainTest {

	public static void main(String[] args) throws IOException {
		BufferedImage img = ImageIO.read(new File("C:/Users/nredmond/Pictures/textExample.png"));
		ImagePreprocessor proc = new ImagePreprocessor();
		BufferedImage trimmedImg = proc.trimMargins(img);
		
		ImageTestPanel p = new ImageTestPanel();
		p.setTestImage(img);
		
		JFrame f = new JFrame();
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.getContentPane().add(p);
		f.setVisible(true);
		
//		NeuralNetwork network = new NeuralNetwork(900, 2, 100, 7, true);
//		CharacterReader reader = new CharacterReader(network);
//		
//		Set<CharacterTrainingExample> trainingSet = TrainingDataReader.createTrainingSetFromFile(CharacterType.ASCII);
//		CharacterNetworkTrainer trainer = new CharacterNetworkTrainer();	
//		
//		for (CharacterTrainingExample nextExample : trainingSet){
//			trainer.addTrainingExample(nextExample);
//		}
//		
//		trainer.trainNeuralNetwork(network, new BackpropagationTrainer());
//		
//		for (int i = 65; i <= 90; i++){
//			char nextLetter = (char)i;
//			BufferedImage nextImage = ImageIO.read(
//					new File("C:\\Users\\nredmond\\Documents\\Capstone\\Training Data\\Set1 - Capital Letters\\" + nextLetter + ".jpg"));
//			
//			char nextResult = reader.readCharacter(nextImage);
//			System.out.println("THIS SHOULD BE '" + nextLetter + "': " + nextResult);
//		}
	}

	private static void testMe(NeuralNetwork network, Set<TrainingExample> set){
		
		for (TrainingExample nextExample : set){
			int[] outputs = network.getOutputForInput(nextExample.getInput());
			
			System.out.print("Desired: ");
			
			for (int i = 0; i < nextExample.getOutput().length; i++){
				System.out.print(nextExample.getOutput()[i] + " ");
			}
			
			System.out.print(" --- Actual: ");
			
			for (int i = 0; i < outputs.length; i++){
				System.out.print(outputs[i] + " ");
			}
			System.out.println();
		}
		
		System.out.println();
	}
}

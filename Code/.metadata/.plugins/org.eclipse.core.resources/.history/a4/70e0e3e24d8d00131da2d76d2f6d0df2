package app;

import imageProcessing.INetworkIOTranslator;

import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

import neuralNetwork.INeuralNetwork;

public class InputReader {
	private static final String TRAINED_NETWORK_NAME = "trainedNetwork";
	
	public static ReadResult readImageInput(BufferedImage image, List<ImageReadMethod> readMethods){
		ReadResult result = new ReadResult();
		List<CharacterResult> nnTranslation = new ArrayList<CharacterResult>();
		List<CharacterResult> ldTranslation = new ArrayList<CharacterResult>();
		
		if (readMethods.contains(ImageReadMethod.NEURAL_NETWORK)){
			
		}
		if (readMethods.contains(ImageReadMethod.LEAST_DISTANCE)){
			
		}
		if (readMethods.contains(ImageReadMethod.NEURAL_NETWORK) && readMethods.contains(ImageReadMethod.LEAST_DISTANCE)){
			
		}
	}
	
	public static CharacterResult readImageInputFromNeuralNetwork(BufferedImage image, INeuralNetwork network){
		
	}
	
	private static CharacterResult readImageFromNeuralNet(BufferedImage image, INetworkIOTranslator translator, INeuralNetwork network){
		
	}
	
	private static CharacterResult readImageWithLeastDistance(BufferedImage image, INetworkIOTranslator translator){
		
	}
	
	public static void setConfigStatus(ImageReadMethod type){
		
	}
}

package app;

import imageProcessing.TranslationResult;

import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

import neuralNetwork.CharacterReader;

public class NeuralNetworkHandler implements ICharacterImageHandler {
	private List<TranslationResult> results;
	private CharacterReader reader;
	
	private List<BufferedImage> rejectedImages;
	
	public NeuralNetworkHandler(List<TranslationResult> results, CharacterReader reader){
		this.results = results;
		this.reader = reader;
		rejectedImages = new ArrayList<BufferedImage>();
	}
	
	@Override
	public void handleImage(BufferedImage img) {
		TranslationResult translation = reader.readCharacter(img);
		
		if (translation.getConfidence() >= ImageReader.MINIMUM_REQUIRED_CONFIDENCE){
			results.add(translation);
		}
		else rejectedImages.add(img);
	}

	@Override
	public List<BufferedImage> getRejectedImages() {
		return rejectedImages;
	}

}

package io;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.Set;

import neuralNetwork.CharacterTrainingExample;

public class MnistParser {
	private static final int NUMBER_TRAINING_IMAGES = 60000;
	private static final int NUMBER_TEST_IMAGES = 10000;
	
	private static final int LABEL_METADATA_BUFFER_SIZE = 8;
	private static final int IMAGE_METADATA_BUFFER_SIZE = 16;
	
	private static final int DATA_BUFFER_SIZE = 1;
	
	private static final int LABEL_START = 48;
	
	public static Set<CharacterTrainingExample> readImages(String imagesFilepath, String labelsFilepath, int numberImages) throws IOException{
		
		return null;
	}
	
	private static List<Character> readLabels(int numberImages, String labelsFilepath) throws IOException{
		InputStream labelInput = new FileInputStream(new File(labelsFilepath));
		
		byte[] buffer = new byte[LABEL_METADATA_BUFFER_SIZE];
		
		labelInput.read(buffer, 0, 16);
		
		ByteBuffer b = ByteBuffer.wrap(buffer);
		b.asIntBuffer().get();
		
		return null;
	}
}

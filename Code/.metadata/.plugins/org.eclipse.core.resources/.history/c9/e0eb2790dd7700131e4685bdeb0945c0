package appTest;

import java.util.HashSet;
import java.util.Set;

import neuralNetwork.BackpropagationTrainer;
import neuralNetwork.NeuralNetwork;
import neuralNetwork.SigmoidActivationCalculator;
import neuralNetwork.TrainingExample;

public class MainTest {

	public static void main(String[] args) {
		NeuralNetwork network = new NeuralNetwork(2, 1, 3, 2, false);
		network.setWeightForNeuron(1, 0, 1, 0.98f);
		network.setWeightForNeuron(1, 0, 2, 0.73f);
		network.setWeightForNeuron(1, 0, 3, -0.11f);
		network.setWeightForNeuron(1, 1, 1, 0.26f);
		network.setWeightForNeuron(1, 1, 2, -0.98f);
		network.setWeightForNeuron(1, 1, 3, 0.90f);
		network.setWeightForNeuron(1, 2, 1, 0.98f);
		network.setWeightForNeuron(1, 2, 2, 0.38f);
		network.setWeightForNeuron(1, 2, 3, -0.05f);
		
		network.setWeightForNeuron(2, 0, 0, 0.5f);
		network.setWeightForNeuron(2, 0, 1, -0.5f);
		network.setWeightForNeuron(2, 1, 0, 0.7f);
		network.setWeightForNeuron(2, 1, 1, 0.52f);
		network.setWeightForNeuron(2, 2, 0, 0.02f);
		network.setWeightForNeuron(2, 2, 1, 0.0f);
		network.setWeightForNeuron(2, 3, 0, -0.22f);
		network.setWeightForNeuron(2, 3, 1, 0.01f);
		
		TrainingExample e1 = new TrainingExample(new float[]{0.41f, -0.07f}, new int[]{0, 0});
		TrainingExample e2 = new TrainingExample(new float[]{0.95f, 0.0f}, new int[]{0, 1});
		TrainingExample e3 = new TrainingExample(new float[]{0.23f, -0.87f}, new int[]{1, 1});
		
		Set<TrainingExample> set = new HashSet<TrainingExample>();
		set.add(e1);
		set.add(e2);
		set.add(e3);
		
		testMe(network,set);
		
		BackpropagationTrainer trainer = new BackpropagationTrainer();
		trainer.trainWithTrainingSet(network, set);
		
		testMe(network,set);
	}

	private static void testMe(NeuralNetwork network, Set<TrainingExample> set){
		
		for (TrainingExample nextExample : set){
			int[] outputs = network.getOutputForInput(nextExample.getInput());
			
			System.out.print("Desired: ");
			
			for (int i = 0; i < nextExample.getOutput().length; i++){
				System.out.print(nextExample.getOutput()[i] + " ");
			}
			
			System.out.print(" --- Actual: ");
			
			for (int i = 0; i < outputs.length; i++){
				System.out.print(outputs[i] + " ");
			}
			System.out.println();
		}
		
		System.out.println();
	}
}

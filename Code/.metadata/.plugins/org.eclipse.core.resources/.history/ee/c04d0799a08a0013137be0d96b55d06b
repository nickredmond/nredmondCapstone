package math;

import org.jocl.cl_context;

public class GpuNetworkCalculator implements INetworkCalculator {
	private static final String SIGMOID_SOURCE = "__kernel void "+
	        "sigmoidKernel(__global const float *a,"+
	        "             __global float *c)"+
	        "{"+
	        "    c[0] = 1.0f / (1.0f + exp(a[0]));"+
	        "}";
	private static final String ERROR_SOURCE = "__kernel void"+
	        "errorKernel(__global const float *weightValues,"+
			"			 __global const float *nextError,"+
	        "			 __global float *error"+	
	        "{"+
			"    int globalId = get_global_id(0);"+
	        "	 error[globalId] = weightValues[globalId] + nextError[globalId];";

	private cl_context gpuContext;
	
	public GpuNetworkCalculator(){
		
	}
	
	@Override
	public float[] calculateSigmoidValues(float[] zValues) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public float[] calculateErrorValues(float[][] weights,
			float[] nextLayerError) {
		// TODO Auto-generated method stub
		return null;
	}

}
